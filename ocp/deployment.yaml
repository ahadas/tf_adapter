apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tmt-results
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tf-api
  labels:
    app: tf-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tf-api
  template:
    metadata:
      labels:
        app: tf-api
    spec:
      containers:
        - name: tf-api
          image: quay.io/ahadas/tf_adapter:latest
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: tmt-results
              mountPath: /results
          env:
            - name: TF_API_URL
              value: https://api.dev.testing-farm.io
      serviceAccountName: pipeline
      volumes:
        - name: tmt-results
          persistentVolumeClaim:
            claimName: tmt-results
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: artifacts
  labels:
    app: artifacts
spec:
  replicas: 1
  selector:
    matchLabels:
      app: artifacts
  template:
    metadata:
      labels:
        app: artifacts
    spec:
      containers:
        - name: artifacts
          image: quay.io/ahadas/tf_artifacts:latest
          ports:
            - containerPort: 8090 # rsync
            - containerPort: 8080 # http server
          volumeMounts:
            - name: tmt-results
              mountPath: /srv/results
          env:
            - name: TF_RESULTS_URL
              value: https://artifacts.osci.redhat.com
      volumes:
        - name: tmt-results
          persistentVolumeClaim:
            claimName: tmt-results
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: tf-api
  name: tf-api
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: tf-api
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: artifacts
  name: artifacts
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
    name: server
  - port: 873
    protocol: TCP
    targetPort: 8090
    name: rsync
  selector:
    app: artifacts
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: artifacts
  name: artifacts
spec:
  port:
    targetPort: server
  to:
    kind: Service
    name: artifacts
